<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Label Convert Documentation</title>
    <link>https://rapidai.github.io/LabelConvert/</link>
    <description>Recent content on Label Convert Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://rapidai.github.io/LabelConvert/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>labelImg → YOLOV5</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/labelimg_to_yolov5/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/labelimg_to_yolov5/</guid>
      <description>简介 link将labelImg标注的数据集格式转换为YOLO格式。
labelImg结构如下： link notifications 具体结构示例文件，可移步：labelImg_dataset
labelImg_dataset ├── classes.txt ├── images(13).jpg ├── images(13).txt ├── images(3).jpg ├── images(3).txt ├── images4.jpg ├── images4.txt ├── images5.jpg ├── images5.txt ├── images6.jpg ├── images7.jpg └── images7.txt 转换 link labelImg_to_yolov5 --src_dir dataset/labelImg_dataset \ --save_dir dataset/labelImg_dataset_output \ --val_ratio 0.2 \ --have_test \ --test_ratio 0.2 --src_dir: labelme标注的数据所在路径 --save_dir: 转换后数据存储路径 --val_ratio: 验证集所占比例，默认是总量的0.2 --have_test: 是否划出测试集，默认是False，如果想要划分测试集，直接加上该参数即可。 --test_ratio: 测试集的比例，默认是总量的0.2 转换后结构如下： link notifications 具体结构示例文件，可移步：yolov5_dataset
labelImg_dataset_output/ ├── classes.txt ├── images │ ├── images(13).jpg │ ├── images(3).</description>
    </item>
    
    <item>
      <title>labelImg → PubLayNet</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/labelimg_to_publaynet/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/labelimg_to_publaynet/</guid>
      <description>简介 link将labelImg格式数据集转换为PubLayNet格式。
labelImg结构如下： link notifications 具体结构示例文件，可移步：labelImg_dataset
labelImg_format ├── classes.txt ├── images(13).jpg ├── images(13).txt ├── images(3).jpg ├── images(3).txt ├── images4.jpg ├── images4.txt ├── images5.jpg ├── images5.txt ├── images6.jpg ├── images7.jpg └── images7.txt 转换 link labelImg_to_publaynet --data_dir dataset/labelImg_dataset \ --val_ratio 0.2 \ --have_test \ --test_ratio 0.2 --data_dir: COCO格式数据集所在目录。默认是dataset/labelImg_dataset --save_dir: 保存转换后的数据集目录。默认是COCO数据集同级目录下 --val_ratio: 验证集数目占数据集总数比例，默认是0.2. --have_test: 是否有测试集。默认为False，如果出现，则为True --test_ratio: 测试集数目占数据集总数比例，默认是0.2 转换后结构如下： link notifications 具体结构示例文件，可移步：publaynet_dataset
publaynet_format ├── test │ ├── images5.jpg │ └── images5.txt ├── test.json ├── train │ ├── images(13).</description>
    </item>
    
    <item>
      <title>COCO → labelImg yolo</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/coco_to_labelimg/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/coco_to_labelimg/</guid>
      <description>简介 link将COCO格式数据集转换为可以直接用labelImg工具可视化标注的YOLO格式。
COCO结构如下： link notifications 具体结构示例文件，可移步：COCO_dataset
COCO_format ├── annotations │ ├── instances_train2017.json │ └── instances_val2017.json ├── train2017 │ ├── 000000000001.jpg │ └── 000000000002.jpg └── val2017 └── 000000000001.jpg 转换 link coco_to_labelImg --data_dir dataset/COCO_format --save_dir dataset/labelImg_format --data_dir: COCO格式数据集所在目录。默认是dataset/COCO_format --save_dir: 保存转换后的数据集目录。默认是COCO数据集同级目录下 转换后结构如下： link notifications 具体结构示例文件，可移步：labelImg_dataset
labelImg_format ├── train │ ├── 000000000001.jpg │ ├── 000000000001.txt │ ├── 000000000002.jpg │ └── classes.txt └── val ├── 000000000001.jpg ├── 000000000001.txt └── classes.txt labelImg可视化 link $ cd dataset/labelImg_format $ labelImg train train/classes.</description>
    </item>
    
    <item>
      <title>YOLOV5 → COCO</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/yolov5_to_coco/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/yolov5_to_coco/</guid>
      <description>简介 link将YOLOv5格式数据集转换为COCO格式。
YOLOV5数据结构如下 link notifications 具体结构示例文件，可移步：yolov5_dataset
yolov5_dataset ├── classes.txt ├── non_labels # 通常用来放负样本 │ └── bg1.jpeg ├── images │ ├── images(13).jpg │ └── images(3).jpg ├── labels │ ├── images(13).txt │ └── images(3).txt ├── train.txt └── val.txt 转换 link yolov5_to_coco --data_dir dataset/YOLOV5 --mode_list train,val --data_dir: 数据集存放目录 --mode_list: 指定划分的数据集种类。 (例如：train,val,test / train,val) 转换后结构如下： link notifications 具体结构示例文件，可移步：COCO_dataset
COCO_dataset ├── annotations │ ├── instances_train2017.json │ └── instances_val2017.json ├── train2017 │ ├── 000000000001.jpg │ └── 000000000002.</description>
    </item>
    
    <item>
      <title>labelme → COCO</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/labelme_to_coco/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/labelme_to_coco/</guid>
      <description>简介 link一键转换labelme标注的数据格式为COCO格式
labelme结构如下： link notifications 具体结构示例文件，可移步：labelme_dataset
labelme_dataset ├── val_0001.jpg ├── val_0001.json ├── val_0002.jpg └── val_0002.json 转换 link labelme_to_coco --src_dir dataset/labelme_dataset \ --out_dir dataset/coco_dataset \ --val_ratio 0.2 \ --have_test \ --test_ratio 0.2 --src_dir: labelme标注的数据所在路径 --out_dir: 转换后数据存储路径 --val_ratio: 验证集所占比例，默认是总量的0.2 --have_test: 是否划出测试集，默认是False，如果想要划分测试集，直接加上该参数即可。 --test_ratio: 测试集的比例，默认是总量的0.2 转换后结构如下： link notifications 具体结构示例文件，可移步：COCO_dataset
COCO_dataset ├── annotations │ ├── instances_train2017.json │ └── instances_val2017.json ├── train2017 │ ├── 000000000001.jpg │ └── 000000000002.jpg └── val2017 └── 000000000002.jpg </description>
    </item>
    
    <item>
      <title>概览</title>
      <link>https://rapidai.github.io/LabelConvert/docs/overview/</link>
      <pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/overview/</guid>
      <description> 目标检测和图像分割的数据集格式转换工具，支持labelme、labelImg与YOLO、VOC和COCO 数据集格式之间的相互转换。
支持的转换 linkflowchart LR A(labelImg) --&amp;gt; B(YOLOv5) A --&amp;gt; C(PubLayNet) D(COCO) --&amp;gt; A B --&amp;gt; D E(YOLOv5 YAML) --&amp;gt; D F(darknet) --&amp;gt; D G(labelme) --&amp;gt; D 安装 link pip install label_convert </description>
    </item>
    
    <item>
      <title>YOLOV5 YAML → COCO</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/yolov5_yaml_to_coco/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/yolov5_yaml_to_coco/</guid>
      <description>简介 link将以yaml文件给出的YOLOv5格式数据集转换为COCO格式
YOLOv5 yaml结构如下： link notifications 具体结构示例文件，可移步：yolov5_yaml_dataset
yolov5_yaml_dataset ├── images │ ├── train │ │ ├── images(13).jpg │ │ └── images(3).jpg │ └── val │ ├── images(13).jpg │ └── images(3).jpg ├── labels │ ├── train │ │ ├── images(13).txt │ │ └── images(3).txt │ └── val │ ├── images(13).txt │ └── images(3).txt └── sample.yaml 转换 link yolov5_yaml_to_coco --yaml_path dataset/YOLOV5_yaml/sample.yaml 转换后结构如下： link notifications 具体结构示例文件，可移步：COCO_dataset
COCO_dataset ├── annotations │ ├── instances_train2017.json │ └── instances_val2017.</description>
    </item>
    
    <item>
      <title>更新日志</title>
      <link>https://rapidai.github.io/LabelConvert/docs/changelog/</link>
      <pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/changelog/</guid>
      <description>2024-03-28 v0.0.8 update: link 优化各个模块代码 添加单元测试 去除无效数据集文件 2023-11-01 v0.0.7 update: link 修复Issue #9 2023-11-01 v0.0.6 update: link 添加labelme_to_coco的支持，详情参见：labelme_to_coco 2023-10-25 v0.0.4~v0.0.5 update: link 修复命令行模式下，参数类型错误 更新文档内容，优化文档表达 2023-09-15 v0.0.3 update: link Add labelImg to publaynet format. </description>
    </item>
    
    <item>
      <title>Darknet → COCO</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/darknet_to_coco/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/darknet_to_coco/</guid>
      <description>简介 link将Darnet格式数据集转化为COCO格式数据集。
Darknet结构如下： link notifications 具体结构示例文件，可移步：darknet_dataset
darknet_dataset ├── class.names ├── gen_config.data ├── gen_train.txt ├── gen_valid.txt └── images ├── train └── valid 转换 link darknet_to_coco --data_path dataset/darknet/gen_config.data 转换后结构如下： link notifications 具体结构示例文件，可移步：COCO_dataset
COCO_dataset ├── annotations │ ├── instances_train2017.json │ └── instances_val2017.json ├── train2017 │ ├── 000000000001.jpg │ └── 000000000002.jpg └── val2017 └── 000000000001.jpg </description>
    </item>
    
    <item>
      <title>可视化COCO数据集</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/coco_visual/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/coco_visual/</guid>
      <description> coco_visual --vis_num 1 \ --json_path dataset/COCO_format/annotations/instances_train2017.json \ --img_dir dataset/COCO_format/train2017 --vis_num: 指定显示图像的索引值 --json_path: 图像所在的json路径 --img_dir: 图像所在的目录 </description>
    </item>
    
    <item>
      <title>COCO格式JSON示例</title>
      <link>https://rapidai.github.io/LabelConvert/docs/supportconversions/demo_of_coco/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rapidai.github.io/LabelConvert/docs/supportconversions/demo_of_coco/</guid>
      <description>{ &amp;#34;info&amp;#34;: { &amp;#34;year&amp;#34;: 2022, &amp;#34;version&amp;#34;: &amp;#34;1.0&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;For object detection&amp;#34;, &amp;#34;date_created&amp;#34;: &amp;#34;2022&amp;#34; }, &amp;#34;licenses&amp;#34;: [{ &amp;#34;id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;Apache License v2.0&amp;#34;, &amp;#34;url&amp;#34;: &amp;#34;https://github.com/RapidAI/YOLO2COCO/LICENSE&amp;#34; }], &amp;#34;images&amp;#34;: [{ &amp;#34;date_captured&amp;#34;: &amp;#34;2022&amp;#34;, &amp;#34;file_name&amp;#34;: &amp;#34;000000000001.jpg&amp;#34;, &amp;#34;id&amp;#34;: 1, &amp;#34;height&amp;#34;: 224, &amp;#34;width&amp;#34;: 224 }, { &amp;#34;date_captured&amp;#34;: &amp;#34;2022&amp;#34;, &amp;#34;file_name&amp;#34;: &amp;#34;000000000002.jpg&amp;#34;, &amp;#34;id&amp;#34;: 2, &amp;#34;height&amp;#34;: 424, &amp;#34;width&amp;#34;: 550 }], &amp;#34;annotations&amp;#34;: [{ &amp;#34;segmentation&amp;#34;: [[18.00, 2.99, 105.00, 2.99, 105.00, 89.00, 18.00, 89.00]], &amp;#34;area&amp;#34;: 7482.011, &amp;#34;iscrowd&amp;#34;: 0, &amp;#34;image_id&amp;#34;: 1, // Corresponding to the ID in images &amp;#34;bbox&amp;#34;: [18.</description>
    </item>
    
  </channel>
</rss>
